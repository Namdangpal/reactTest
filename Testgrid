import React, { useState } from "react";
import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/dist/styles/ag-grid.css";
import "ag-grid-community/dist/styles/ag-theme-alpine.css";

const rowData = [
  { facilityType: "소화설비", facilityName: "소화기", model: "ABC-3.3kg", location: "1층 복도1" },
  { facilityType: "소화설비", facilityName: "소화기", model: "ABCd-3.3kg", location: "1층 복도2" },
  { facilityType: "소화설비", facilityName: "소화기", model: "ABcde-3.3kg", location: "1층 복도3" },
  { facilityType: "소화설비", facilityName: "옥내소화전", model: "ABC-3.3kg", location: "지하1층1 " },
  { facilityType: "소화설비", facilityName: "옥내소화전", model: "DN65", location: "지하1층2" },
  { facilityType: "경보설비", facilityName: "비상벨", model: "BZ-100", location: "2층 계단1" },
  { facilityType: "경보설비", facilityName: "비상벨", model: "BZ-1001", location: "2층 계단2" },
  { facilityType: "경보설비", facilityName: "자동화재탐지설비", model: "Smoke-Detector1", location: "각층 복도1" },
  { facilityType: "경보설비", facilityName: "자동화재탐지설비", model: "Smoke-Detector2", location: "각층 복도2" },
  { facilityType: "피난설비", facilityName: "유도등", model: "LED-Exit", location: "출입구" },
  { facilityType: "피난설비", facilityName: "유도등", model: "LED-Exit2", location: "출입구2" },
  { facilityType: "피난설비", facilityName: "비상조명등", model: "LED-Light", location: "계단실1" },
  { facilityType: "피난설비", facilityName: "비상조명등", model: "LED-Light2", location: "계단실2" },
];

// rowSpan 계산 함수
function getRowSpan(data, field, allData, rowIndex) {
  const currentValue = data[field];
  let span = 1;

  // 첫 row거나 이전 row 값과 다르면 → 몇 개가 연속되는지 세기
  if (rowIndex === 0 || allData[rowIndex - 1][field] !== currentValue) {
    for (let i = rowIndex + 1; i < allData.length; i++) {
      if (allData[i][field] === currentValue) {
        span++;
      } else {
        break;
      }
    }
  } else {
    // 이전 값과 같으면 → span 없음
    span = 0;
  }

  return span;
}

export default function App() {
  const [gridApi, setGridApi] = useState(null);

  const columnDefs = [
    {
      headerName: "시설유형",
      field: "facilityType",
      rowSpan: params => getRowSpan(params.data, "facilityType", rowData, params.node.rowIndex),
      cellClassRules: {
        "cell-span": "value !== undefined"
      }
    },
    {
      headerName: "시설명",
      field: "facilityName",
      rowSpan: params => getRowSpan(params.data, "facilityName", rowData, params.node.rowIndex),
      cellClassRules: {
        "cell-span": "value !== undefined"
      }
    },
    { headerName: "모델", field: "model" },
    { headerName: "위치", field: "location" }
  ];

  return (
    <div className="ag-theme-alpine" style={{ height: 600, width: "100%" }}>
      <AgGridReact
        columnDefs={columnDefs}
        rowData={rowData}
        defaultColDef={{ resizable: true, sortable: true }}
      />
    </div>
  );
}
