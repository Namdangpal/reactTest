import React, { useState } from "react";
import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/styles/ag-grid.css";
import "ag-grid-community/styles/ag-theme-alpine.css";
import { ModuleRegistry, AllCommunityModule } from "ag-grid-community";

ModuleRegistry.registerModules([AllCommunityModule]);

const rowData = [
  { facilityType: "소화기", facilityName: "A동", item: "압력 게이지", cycle: "1개월" },
  { facilityType: "소화기", facilityName: "A동", item: "분말 상태", cycle: "1개월" },
  { facilityType: "소화기", facilityName: "B동", item: "압력 게이지", cycle: "3개월" },
  { facilityType: "스프링클러", facilityName: "C동", item: "밸브 개폐", cycle: "6개월" },
  { facilityType: "스프링클러", facilityName: "C동", item: "헤드 상태", cycle: "12개월" },
];

const GridWithRowSpan = () => {
  const [colDefs] = useState([
    {
      headerName: "시설유형",
      field: "facilityType",
      rowSpan: params => getRowSpan(params, "facilityType"),
      cellClassRules: { "cell-span": "value !== undefined" },
    },
    {
      headerName: "시설명",
      field: "facilityName",
      rowSpan: params => getRowSpan(params, "facilityName"),
      cellClassRules: { "cell-span": "value !== undefined" },
    },
    { headerName: "점검항목", field: "item" },
    { headerName: "점검주기", field: "cycle" },
  ]);

  return (
    <div className="ag-theme-alpine" style={{ height: 500, width: 800 }}>
      <AgGridReact rowData={rowData} columnDefs={colDefs} suppressRowTransform={true} />
    </div>
  );
};

// ✅ 병합 계산 함수
const getRowSpan = (params, field) => {
  const data = params.api.getDisplayedRowAtIndex(params.rowIndex).data;
  if (!data) return 1;

  let rowSpan = 1;
  const rowIndex = params.rowIndex;
  const allData = params.api.getModel().rowsToDisplay.map(r => r.data);

  // 같은 field 값으로 연속되는 행 수 계산
  for (let i = rowIndex + 1; i < allData.length; i++) {
    if (allData[i][field] === data[field]) {
      rowSpan++;
    } else {
      break;
    }
  }

  // 이미 병합된 경우 중복 출력 방지
  if (
    rowIndex > 0 &&
    allData[rowIndex - 1][field] === data[field]
  ) {
    return 0;
  }

  return rowSpan;
};

export default GridWithRowSpan;


SELECT
    facilityName,
    facilityType,
    SUM(CASE WHEN cycle = '1개월'  THEN 1 ELSE 0 END) AS cnt_1m,
    SUM(CASE WHEN cycle = '3개월'  THEN 1 ELSE 0 END) AS cnt_3m,
    SUM(CASE WHEN cycle = '6개월'  THEN 1 ELSE 0 END) AS cnt_6m,
    SUM(CASE WHEN cycle = '12개월' THEN 1 ELSE 0 END) AS cnt_12m
FROM facility_table
GROUP BY facilityName, facilityType
ORDER BY facilityName, facilityType;

